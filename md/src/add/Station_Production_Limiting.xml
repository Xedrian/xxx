<?xml version="1.0" encoding="utf-8" ?>
<mdscript name="St_Prod" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<!-- $St_Prod_Data {  1  key.timestamp,
							  2  key.sequence,
							  3  key.stage,
							  4  key.prodbrake,
							  5  key.debug,
							  6  key.proddata.state,
							  7  key.proddata.cycletime,
							  8  key.proddata.cycleefficiency,
							  9  key.proddata.remainingcycletime,
							  10 key.proddata.prevremainingcycletime,
							  11 key.proddata.products,
							  12 key.proddata.presources,
							  13 key.proddata.sresources -->
		<cue name="St_Prod_RoundRobin" namespace="this" checkinterval="10s" instantiate="true">
			<actions>
				<set_value name="$StartTime" exact="player.age"/>
				<set_value name="$Throttled" exact="0"/>
				<set_value name="$GlobalDebug" exact="0"/>
				<do_if value="@player.entity.$St_Prod_Data_Debug">
					<set_value name="$GlobalDebug" exact="@player.entity.$St_Prod_Data_Debug"/>
				</do_if>
				<!--<debug_text text="'Global Debug: ' + $GlobalDebug"/>-->
				<find_object name="$Stations" class="class.station" space="player.galaxy" owner="faction.player" multiple="true"/>
				<do_if value="$GlobalDebug gt 0">
					<debug_text text="'Starting sweep:'"/>
				</do_if>
				<do_all exact="$Stations.count" counter="$Counter">
					<set_value name="$Manager" exact="@$Stations.{$Counter}.tradenpc"/>
					<do_if value="$Manager.$St_Prod_Data? and $Manager.$St_Prod_Data != '' ">
						<set_value name="$StationDebug" exact="0"/>
						<do_if value="@$Manager.$St_Prod_Data_Debug">
							<set_value name="$StationDebug" exact="@$Manager.$St_Prod_Data_Debug"/>
						</do_if>
						<!--<debug_text text="'Station Debug: ' + $StationDebug"/>-->
						<set_value name="$EffectiveDebug" exact="$StationDebug"/>
						<do_if value="$StationDebug lt $GlobalDebug">
							<set_value name="$EffectiveDebug" exact="$GlobalDebug"/>
						</do_if>
						<do_if value="$EffectiveDebug gt 0">
							<debug_text text="$Stations.{$Counter}.name + ' - ' + $Stations.{$Counter}.zone.name + '. Effective Debug: ' + $EffectiveDebug"/>
						</do_if>
						<create_list name="$Monitored" comment="list of monitored prod modules"/>
						<do_all exact="@$Manager.$St_Prod_DataKeys.count" counter="$CounterPrK">
							<set_value name="$Throttled" operation="add"/>
							<set_value name="$Key" exact="'$' + $Manager.$St_Prod_DataKeys.{$CounterPrK}"/>
							<do_all exact="$Stations.{$Counter}.productions.count" counter="$CounterP">
								<set_value name="$PModule" exact="$Stations.{$Counter}.productions.{$CounterP}"/>
								<set_value name="$PModuleSequence" exact="$PModule.sequence"/>
								<do_if value="$PModule.sequence == ''" comment="turn ['',0] into [a,0]">
									<set_value name="$PModuleSequence" exact="'a'"/>
								</do_if>
								<do_if value="($PModuleSequence == $Manager.$St_Prod_Data.{$Key}.{2}) and
                              ($PModule.stage == $Manager.$St_Prod_Data.{$Key}.{3})" comment="match prod module">
									<set_value name="$uid" exact="'%1_%2_%3'.[$PModuleSequence, $PModule.stage, $Manager.$St_Prod_Data.{$Key}.{11}.{1}.{'$ware'}]"/>
									<do_if value="$EffectiveDebug gt 2">
										<debug_text text="'uid: ' + $uid + ' key: ' + $Manager.$St_Prod_DataKeys.{$CounterPrK}"/>
									</do_if>
									<set_value name="$ProdStatus" exact="$Manager.$St_Prod_Data.{$Key}.{6}"/>
									<do_if value="$uid != $Manager.$St_Prod_DataKeys.{$CounterPrK}">
										<set_value name="$ProdStatus" exact="'producing another ware'"/>
									</do_if>
									<do_if value="$EffectiveDebug gt 1">
										<debug_text text="'\tMatched: ' + $PModule.name  + ' ' + $Key + ' - ' + $ProdStatus"/>
									</do_if>
									<set_value name="$RemainingCycletime" exact="($Manager.$St_Prod_Data.{$Key}.{9})f"/>
									<set_value name="$PrevRemainingCycletime" exact="($Manager.$St_Prod_Data.{$Key}.{10})f"/>
									<do_if value="($Manager.$St_Prod_Data.{$Key}.{6} =='producing') and
                                ($uid == $Manager.$St_Prod_DataKeys.{$CounterPrK}) and
                                ($RemainingCycletime > $PrevRemainingCycletime) " comment="its producing the same product">
										<set_value name="$results" exact="'\tRestocking primary resources - ' + $Stations.{$Counter}.name + '.'"/>
										<do_all exact="@$Manager.$St_Prod_Data.{$Key}.{12}.count" counter="$CounterRes" comment="return primary resources">
											<set_value name="$Res" exact="$Manager.$St_Prod_Data.{$Key}.{12}.{$CounterRes}"/>
											<set_value name="$Amount" exact="($Res.{'$cycle'} * $Manager.$St_Prod_Data.{$Key}.{4})i"/>
											<set_value name="$results" exact="$results + ' ' + $CounterRes + ': ' + $Res.{'$ware'} + ' - ' + $Amount + '/' + $Res.{'$cycle'}"/>
											<add_cargo object="$Stations.{$Counter}" ware="ware.{$Res.{'$ware'}}" exact="$Amount"/>
										</do_all>
										<do_if value="$EffectiveDebug gt 1">
											<debug_text text="$results"/>
										</do_if>
										<do_if value="$Manager.$St_Prod_Data.{$Key}.{13}.count?">
											<set_value name="$results" exact="'\tRestocking secondary resources - ' + $Stations.{$Counter}.name + '.'"/>
											<do_all exact="$Manager.$St_Prod_Data.{$Key}.{13}.count" counter="$CounterRes" comment="return primary resources">
												<set_value name="$Res" exact="$Manager.$St_Prod_Data.{$Key}.{13}.{$CounterRes}"/>
												<set_value name="$Amount" exact="($Res.{'$cycle'} * $Manager.$St_Prod_Data.{$Key}.{4})i"/>
												<set_value name="$results" exact="$results + ' ' + $CounterRes + ': ' + $Res.{'$ware'} + ' - ' + $Amount + '/' + $Res.{'$cycle'}"/>
												<add_cargo object="$Stations.{$Counter}" ware="ware.{$Res.{'$ware'}}" exact="$Amount"/>
											</do_all>
											<do_if value="$EffectiveDebug gt 1">
												<debug_text text="$results"/>
											</do_if>
										</do_if>
										<set_value name="$PriWare" exact="$Manager.$St_Prod_Data.{$Key}.{11}.{1}"/>
										<do_if value="$EffectiveDebug gt 1">
											<debug_text text="'\tPolling delay: %1s'.[player.age - $Manager.$St_Prod_Data.{$Key}.{1}]"/>
										</do_if>
										<set_value name="$AdjRemCycletime" exact="$RemainingCycletime + $Manager.$St_Prod_Data.{$Key}.{1} - player.age"
												   comment="Compensate for delay between GetProductionModuleData call result in lua
                                        and it being processed by md script"/>
										<do_if value="$AdjRemCycletime lt 0">
											<set_value name="$AdjRemCycletime" exact="0.1"/>
										</do_if>
										<set_value name="$ShowStockAdj" exact="false"/>
										<do_if value="$EffectiveDebug gt 1">
											<debug_text text="'\tSchedule stock correction of %3/%4 %1 in %2s'.[$PriWare.{'$ware'}, $AdjRemCycletime,
                                                                             ($PriWare.{'$cycle'} * $Manager.$St_Prod_Data.{$Key}.{4})i, 
                                                                             $PriWare.{'$cycle'}]"/>
											<set_value name="$ShowStockAdj" exact="true"/>
										</do_if>
										<signal_cue_instantly cue="St_Prod_Recycle" param="[$AdjRemCycletime, $PModule, $PriWare.{'$ware'},
                                                                        $PriWare.{'$cycle'}, $Manager.$St_Prod_Data.{$Key}.{4},
                                                                        $ShowStockAdj]"/>
									</do_if>
									<set_value name="$BuildStage" exact="'%1_%2'.[$PModuleSequence, $PModule.stage]"/>
									<do_if value="not $Monitored.indexof.{$BuildStage}" comment="only run one monitor per prod module">
										<append_to_list name="$Monitored" exact="$BuildStage"/>
										<raise_lua_event name="'St_Prod_RemainingCycletime'" param="$PModule" comment="update module info"/>
									</do_if>
									<break/>
								</do_if>
							</do_all>
						</do_all>
						<do_if value="$EffectiveDebug gt 1">
							<debug_text text="'\tMonitoring ' + $Monitored"/>
						</do_if>
					</do_if>
				</do_all>
				<do_if value="$GlobalDebug gt 0">
					<debug_text text="'Found %1 Stations in %2ms. Prods braked %3. Cycle 10s'.[$Stations.count, (player.age - $StartTime)ms, $Throttled]"/>
				</do_if>
			</actions>
		</cue>

		<cue name="St_Prod_Recycle" namespace="this" instantiate="true" comment="Remove product at the end of the production cycle">
			<conditions>
				<event_cue_signalled/>
			</conditions>
			<delay exact="(event.param.{1})s"/>
			<actions>
				<set_value name="$PModule" exact="event.param.{2}"/>
				<set_value name="$Ware" exact="event.param.{3}"/>
				<set_value name="$Amount" exact="event.param.{4}"/>
				<set_value name="$Brake" exact="event.param.{5}"/>
				<set_value name="$ShowStockAdj" exact="event.param.{6}"/>
				<do_if value="$ShowStockAdj">
					<debug_text text="'\tCorrected stock level %1/%2 %3 for %4 - %5.'.[($Amount * $Brake)i, $Amount, $Ware,
                                                                            $PModule.container.name, $PModule.container.zone.name]"/>
				</do_if>
				<add_cargo object="$PModule.container" ware="ware.{$Ware}" exact="(-1 * $Amount * $Brake)i" comment="remove primary ware"/>
			</actions>
		</cue>

		<cue name="St_Prod_Logger" namespace="this" instantiate="true" comment="Remote logger for lua scripts avoids using DebugError">
			<conditions>
				<event_ui_triggered screen="'St_Prod_Logger'"/>
			</conditions>
			<actions>
				<do_if value="event.param3 != null" comment="4.00 RC2 or later">
					<debug_text text="event.param3"/>
				</do_if>
				<do_else>
					<debug_text text="event.param2" comment="earlier than 4.00 RC2"/>
				</do_else>
			</actions>
		</cue>

		<cue name="St_Prod_GetPlayer" namespace="this" instantiate="true" comment="finds the player object and signals it to lua scripts">
			<conditions>
				<check_any>
					<event_ui_triggered screen="'St_Prod_GetPlayer'"/>
				</check_any>
			</conditions>
			<actions>
				<debug_text text="'MD Player is ' + player.entity + ' ' + player.entity.name"/>
				<raise_lua_event name="'St_Prod_Player'" param="player.entity" comment="tell lua the player"/>
			</actions>
		</cue>
	</cues>
</mdscript>